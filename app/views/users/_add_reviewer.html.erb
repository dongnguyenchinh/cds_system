<div class="modal fade bs-example-modal-xl"  id="addReviewerModal">
  <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header head-myheader">
        <h4 class="modal-title" id="add_reviewer_modal_title" style="color: white">Assign Users to Group</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true" style="color:white" >&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-5" >
            <h5>Available Users</h5>
            <!-- Table header màu đậm hơn -->
            <div id="table_left_wrapper" style="overflow-x:auto;">
              <% render "users_reviewer_list" %>
            </div>
          </div>
          <div class="col-2 button-center">
            <button type="button" class="btn btn-secondary" id="to_right" disabled="disabled"><%= image_tag("icon_arrow_right.png", class: "arrow_icon", border: 1) %></button>
            <p></p>
            <button type="button" class="btn btn-secondary" id="to_left" disabled="disabled"><%= image_tag("icon_arrow_left.png", class: "arrow_icon", border: 1) %></button>
          </div>
          <div class="col-5">
            <h5>Selected Users</h5>
            <!-- Table header màu đậm hơn -->
            <div id="table_right_wrapper" style="overflow-x:auto;">
              <% render "users_selected_reviewer" %>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <div class="col-12 p-3 text-center">
            <button id="save" type="button" class="btn btn-secondary" data-dismiss="modal" disabled>Save</button>
            <button type="button" class="btn btn-light border-dark" data-dismiss="modal">Cancel</button>
          </div>
        </div>
      </div>
    </div>
    <!-- hidden input to contains id-->
    <input type="text" style="display:none;" class="add-reviewer-id-modal"></input>
</div>
<script>
  var global_data_table_left;
  var global_data_table_right;
  
  function set_all_left_checkbox()
  {
    // Lấy danh sách checkbox
    var checkboxes = $("#table_left tbody").find('input:checkbox');
  
    if($("#check_all_choose_left").is(':checked'))
    {
      // Lặp và thiết lập checked
      for (var i = 0; i < checkboxes.length; i++){
          checkboxes[i].checked = true;
          checkboxes[i].closest('tr').style.backgroundColor = "pink";
          $('#to_right').attr("disabled",false);
          $('#to_right').removeClass("btn-secondary").addClass("btn-info");
      }
    }
    else
    {
        for (var i = 0; i < checkboxes.length; i++){
          checkboxes[i].checked = false;
          if (i % 2 == 0){
          checkboxes[i].closest('tr').style.backgroundColor = "#E9ebf5";
        }else{
          checkboxes[i].closest('tr').style.backgroundColor = "#cfd5ea";
        }
          $('#to_right').attr("disabled",true);
          $('#to_right').removeClass("btn-info").addClass("btn-secondary");
      }
    }
  }
  
  function set_all_right_checkbox()
  {
    // Lấy danh sách checkbox
    var checkboxes = $("#table_right tbody").find('input:checkbox');
  
    if($("#check_all_choose_right").is(':checked'))
    {
      // Lặp và thiết lập checked
      for (var i = 0; i < checkboxes.length; i++){
          checkboxes[i].checked = true;
          checkboxes[i].closest('tr').style.backgroundColor = "pink";
          $('#to_left').attr("disabled",false);
          $('#to_left').removeClass("btn-secondary").addClass("btn-info");
      }
    }
    else
    {
        for (var i = 0; i < checkboxes.length; i++){
          checkboxes[i].checked = false;
          if (i % 2 == 0){
          checkboxes[i].closest('tr').style.backgroundColor = "#E9ebf5";
        }else{
          checkboxes[i].closest('tr').style.backgroundColor = "#cfd5ea";
        }
          $('#to_left').attr("disabled",true);
          $('#to_left').removeClass("btn-info").addClass("btn-secondary");
      }
    }
  }
  
  function set_data_event()
  {
  
  
  
    document.getElementById("check_all_choose_left").onclick = function ()
    {
      set_all_left_checkbox();
    };
    document.getElementById("check_all_choose_right").onclick = function ()
    {
      set_all_right_checkbox();
    };
  
    $('input:checkbox').change(function(){
      $this = $(this);
      if($this.val() != "all")
      {
        if($this.is(':checked'))
        {
          $this.closest('tr').css('background-color',"pink");
        }
        else
        {
            if ($this.closest('tr').attr('class') == "odd"){
        $this.closest('tr').css('background-color', "#cfd5ea");}
        else{
        $this.closest('tr').css('background-color', "#E9ebf5");
        }
        }
      }
    });
    $('#to_right').click(function() {
      var checkboxes = $("#table_left tbody").find('input:checkbox');
      for (var i = 0; i < checkboxes.length; i++){
        if(checkboxes[i].checked == true){
            checkboxes[i].checked = false;
            var tr = checkboxes[i].closest("tr");
            tr.style.color = "black";
  
  
            var addRow = global_data_table_left.fnGetData(tr);
            global_data_table_right.fnAddData(addRow);
            global_data_table_left.fnDeleteRow(tr);
  
            set_data_event();
            save_button(1);
        }
      }
      $('#to_right').attr("disabled",true);
      $('#to_right').removeClass("btn-info").addClass("btn-secondary");
       $("#check_all_choose_left").prop("checked", false);
      $('#save').attr("disabled",false);
      $("#save").removeClass("btn-secondary").addClass("btn-primary");
    });
    $('#to_left').click(function() {
      var checkboxes = $("#table_right tbody").find('input:checkbox');
      for (var i = 0; i < checkboxes.length; i++){
        if(checkboxes[i].checked == true){
            checkboxes[i].checked = false;
            var tr = checkboxes[i].closest("tr");
            tr.style.color = "black";
  
            var addRow = global_data_table_right.fnGetData(tr);
            global_data_table_left.fnAddData(addRow);
            global_data_table_right.fnDeleteRow(tr);
            set_data_event();
            save_button(1);
        }
      }
      $('#to_left').attr("disabled",true);
      $('#to_left').removeClass("btn-info").addClass("btn-secondary");
      $("#check_all_choose_right").prop("checked", false);
      $('#save').attr("disabled",false)
        $("#save").removeClass("btn-secondary").addClass("btn-primary");
  
    });
  
    $("#table_left tbody .mycontrol[type=checkbox]").on('click', function () {
        var nboxes = $("#table_left tbody :checkbox:not(:checked)");
        if (nboxes.length > 0 && $("#check_all_choose_left").is(":checked") == true) {
          $("#check_all_choose_left").prop("checked", false);
        }
        else if (nboxes.length == 0 && $("#check_all_choose_left").is(":checked") == false) {
          $("#check_all_choose_left").prop("checked", true);
        }
  
        var nboxes_checked = $("#table_left tbody :checkbox:checked").length;
  
        if (nboxes_checked > 0)
        {
          $("#to_right").attr("disabled", false);
          $('#to_right').removeClass("btn-secondary").addClass("btn-info");
        }
        else
        {
          $("#to_right").attr("disabled", true);
          $('#to_right').removeClass("btn-info").addClass("btn-secondary");
        }
  
      });
  
      $("#table_right tbody .mycontrol[type=checkbox]").on('click', function () {
        var nboxes = $("#table_right tbody :checkbox:not(:checked)");
        if (nboxes.length > 0 && $("#check_all_choose_right").is(":checked") == true) {
          $("#check_all_choose_right").prop("checked", false);
        }
        else if (nboxes.length == 0 && $("#check_all_choose_right").is(":checked") == false) {
          $("#check_all_choose_right").prop("checked", true);
        }
  
        var nboxes_checked = $("#table_right tbody :checkbox:checked").length;
  
        if (nboxes_checked > 0)
        {
          $("#to_left").attr("disabled", false);
          $('#to_left').removeClass("btn-secondary").addClass("btn-info");
        }
        else
        {
          $("#to_left").attr("disabled", true);
          $('#to_left').removeClass("btn-info").addClass("btn-secondary");
        }
  
      });
  }
  function set_up_data_table_reviewer()
  {
  $(document).ready(function() {
  // Cấu hình các nhãn phân trang
  
  global_data_table_left = $('#table_left').dataTable( {
      "bDestroy": true,
      "processing": true, // tiền xử lý trước
      "iDisplayLength": 10,
      "order": [[ 1, 'asc' ]], //sắp xếp giảm dần theo cột thứ 1
      "bDestroy": true,
      "bInfo" : false,
      "fnDrawCallback": function()
      {
        set_data_event();
      },
      "aoColumns": [
        { sClass: "add_reviewer_index" },
          null,
        { sClass: "add_reviewer_name"} ,
        { sClass: "add_reviewer_account"} ,
        { sClass: "add_reviewer_id d-none"}]
  });
  
  
  
  	global_data_table_right =$('#table_right').dataTable( {
      "bDestroy": true,
      "processing": true, // tiền xử lý trước
      "aLengthMenu": [[5, 10, 20, 50], [5, 10, 20, 50]], // danh sách số trang trên 1 lần hiển thị bảng
      "iDisplayLength": 10,
      "order": [[ 1, 'asc' ]] ,//sắp xếp giảm dần theo cột thứ 1
      "fnDrawCallback": function()
      {
        set_data_event();
      },
      "bInfo" : false,
      "aoColumns": [
        { sClass: "add_reviewer_index" },
          null,
        { sClass: "add_reviewer_name"} ,
        { sClass: "add_reviewer_account"} ,
        { sClass: "add_reviewer_id d-none"}]
  });
  
  //set_data_event();
  
  $('.dataTables_length').attr("style", "display:none");
  });
  }
  
  
  function check_checkbox(name) {
  	var count = 0;
  	var checkboxes = document.getElementsByName(name);
  	for (var i = 0; i < checkboxes.length; i++){
  		if(checkboxes[i].checked == true)
  			count++ ;
  	}
  	return count;
  }
  
  // run once
  $('#save').click(function ()
  {
  
    var user_id = $('.add-reviewer-id-modal').val();
    var reviewer_ids = [];
  
    var reviewer_id_rows = global_data_table_right.fnGetData();
  
    for (var i=0; i<reviewer_id_rows.length; i++)
    {
      current_approver_id = reviewer_id_rows[i][4];
      reviewer_ids.push(current_approver_id);
    }
  
    if (reviewer_ids.length > 3)
    {
      fails("The number of reviewer can't be higher than 3<br>");
      return;
    }
  
    // convert to string
    if (reviewer_ids.length == 0)
    {
      reviewer_ids = "none";
    }
    else
    {
      reviewer_ids = reviewer_ids.join(",");
    }
  
  
    $.ajax({
    url: "/admin/user_management/add_reviewer/" + user_id + '/' + reviewer_ids,
    type: "POST",
    headers: { "X-CSRF-Token": $('meta[name="csrf-token"]').attr("content") },
    });
    success("Add reviewer to this group has been successfully!");
    save_button(0)
    $('#addReviewerModal').modal('hide')
  });
  function save_button(flag) {
  if (flag == 0) {
    $('#save').prop("disabled", true)
    $("#save").removeClass("btn-primary").addClass("btn-secondary");
  } else {
    $('#save').prop("disabled", false)
  $("#save").removeClass("btn-secondary").addClass("btn-primary");
  }
  }
</script>
